---
import HorizontalCenter from "../../components/HorizontalCenter.astro";
import GttLayoutGames from "../../layouts/GttLayoutGames.astro";

---
<GttLayoutGames pageTitle="Účastníci">
    <HorizontalCenter><h1 class="GttLayoutGames-main">Účastníci</h1></HorizontalCenter>
    <div id="contestants-TeamsHolder"></div>
</GttLayoutGames>
<script>
import { getGameFromGameName, listGames } from "../../scripts/api/game";
import { generatedRoleNameFromId, listGeneratedRoles } from "../../scripts/api/generatedRoles";
import { listParticipating } from "../../scripts/api/teams";

    const url = new URL(window.location.href);
    const gameName = decodeURIComponent(url.searchParams.get("game") ||"");
    const nav = {
        "generalRules": document.getElementById("GttLayoutGames-generalRules") as HTMLLinkElement,
        "rules": document.getElementById("GttLayoutGames-rules") as HTMLLinkElement,
        "bracket": document.getElementById("GttLayoutGames-bracket") as HTMLLinkElement,
        "contestants": document.getElementById("GttLayoutGames-contestants") as HTMLLinkElement,
    }
    const teamsHolder = document.getElementById("contestants-TeamsHolder") as HTMLDivElement;
    nav.generalRules.href = "/games/rules/general";
    nav.generalRules.classList.remove("disabled");

    async function loadGame(){
        const allGames = await listGames();
        if(gameName === undefined){
            console.error("gameName is undefined");
        }else{
            const game = getGameFromGameName(gameName, allGames);
            if(game === undefined){
                console.error("game is undefined");
            }else{
                nav.rules.href = `/games/rules/${game.name}`;
                nav.rules.classList.remove("disabled");
                
                const generatedRoles = await listGeneratedRoles(game.gameId);
                const teams = await listParticipating(game.gameId);
                for(const team of teams){
                    const teamElem = document.createElement('div');
                    teamElem.classList.add("contestants-team");
                    
                    const teamName = document.createElement('h2');
                    teamName.innerText = team.name;
                    teamElem.appendChild(teamName);

                    const playersHolder = document.createElement('div');
                    playersHolder.classList.add("contestants-players");
                    teamElem.appendChild(playersHolder);

                    if(team.players !== undefined){
                        for(const player of team.players){
                            const playerElem = document.createElement("div");
                            playerElem.classList.add("contestants-player");
                            playersHolder.appendChild(playerElem);

                            const nick = document.createElement("div");
                            nick.classList.add("contestants-nick");
                            nick.innerText = player.nick;
                            playerElem.appendChild(nick);

                            const spacer = document.createElement("div");
                            spacer.classList.add("contestants-spacer");
                            playerElem.appendChild(spacer);

                            const roleName = document.createElement("div");
                            roleName.classList.add("contestants-roleName");
                            roleName.innerText = generatedRoleNameFromId(player.generatedRoleId, generatedRoles);
                            playerElem.appendChild(roleName);
                        }
                    }

                    teamsHolder.appendChild(teamElem);
                }
            }
        }
    }
    loadGame();
</script>
<style is:global>
    .contestants-player{
        display: flex;
    }
    .contestants-spacer{
        flex-grow: 1;
    }
    .contestants-players{
        width: 30rem;
    }
</style>